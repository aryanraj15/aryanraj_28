// Add this function to filter values based on the condition
const filterEndTimeValues = (startTimeId) => {
  if (startTimeId === 2) {
    // If starttimeId is 2, filter out the value with id 2 from time2
    return time2.filter((value) => value.id !== 2);
  }
  return time2; // Otherwise, return the original time2 array
};

// Inside the component, update the Autocomplete component for LeaveEndTime
<Grid item xs={12} sm={4} md={4} lg={4}>
  <Autocomplete
    margin="0"
    id="LeaveEndTime"
    name="LeaveEndTime"
    options={filterEndTimeValues(formik.values.LeavestartTime)} // Use the filtered values
    sx={{ width: "100%" }}
    required
    fullWidth
    value={time2.find(
      (option) => option.id === formik.values.LeaveEndTime
    ) || null}
    onChange={(e, value) => {
      if (value === null) {
        formik.setFieldValue("LeaveEndTime", null)
      }
      else
        formik.setFieldValue("LeaveEndTime", value.id)
    }}
    getOptionLabel={(value) => value.label}
    renderInput={(params) =>
      <TextField
        {...params}
        label="Time"
        required
        onBlur={formik.handleBlur}
        helperText={formik.errors.LeaveEndTime && formik.touched.LeaveEndTime ? formik.errors.LeaveEndTime : null}
        error={formik.errors.LeaveEndTime && formik.touched.LeaveEndTime ? true : false}
      />}
  />
</Grid>

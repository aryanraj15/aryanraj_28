<Grid item xs={12} sm={4} md={4} lg={6}>
                                                                    <FormControl fullWidth >

                                                                        <Autocomplete
                                                                            disablePortal
                                                                            margin="0"
                                                                            size="small"
                                                                            fullWidth
                                                                            id="state"
                                                                            name="state"
                                                                            options={stateList}
                                                                            disabled={isReadable}
                                                                            value={stateList.find(
                                                                                (option) => option.id === formik.values.state?.id
                                                                            ) || null}
                                                                            onChange={(e, value) => {

                                                                                if (value === null) {
                                                                                    formik.setFieldValue("state", null)
                                                                                }
                                                                                else {
                                                                                    formik.setFieldValue("state", value)
                                                                                    axios.get(`${process.env.REACT_APP_JOBAPPLICATION_API_URL}/user/getDistrictList/${value.state}`).then(response => {
                                                                                        let sortedDistrictData = response.data.result.map((value) => {
                                                                                            value.label = value.label.toUpperCase();
                                                                                            return value;
                                                                                        })

                                                                                        sortedDistrictData = sortedDistrictData.sort((a, b) => a.label.localeCompare(b.label));

                                                                                        setIsDistrictDisabled(false);
                                                                                        setDistrictList(sortedDistrictData);
                                                                                        console.log(sortedDistrictData);
                                                                                    })
                                                                                        .catch(error => {
                                                                                            setDistrictList([]);
                                                                                            console.log(error);
                                                                                        });

                                                                                }
                                                                            }}
                                                                            getOptionLabel={(value) => value.label}
                                                                            sx={{ width: "100%", mt: 2, mb: 1 }}
                                                                            renderInput={(params) => (
                                                                                <TextField {...params}
                                                                                    label="State Name"
                                                                                    onBlur={formik.handleBlur}
                                                                                    helperText={formik.errors.state && formik.touched.state ? formik.errors.state : null}
                                                                                    error={formik.errors.state && formik.touched.state ? true : false}
                                                                                />
                                                                            )}
                                                                        />
                                                                    </FormControl>
                                                                </Grid>




{
  "status": true,
  "message": "State List Fetched Successfully!!",
  "result": [
    {
      "label": "ANDAMAN AND NICOBAR ISLANDS",
      "id": 25
    },
    {
      "label": "ANDHRA PRADESH",
      "id": 30
    },
    {
      "label": "ARUNACHAL PRADESH",
      "id": 21
    },
    {
      "label": "ASSAM",
      "id": 15
    },
    {
      "label": "BIHAR",
      "id": 22
    },
    {
      "label": "CHANDIGARH",
      "id": 26
    },
    {
      "label": "CHHATTISGARH",
      "id": 8
    },
    {
      "label": "DDD",
      "id": 36
    },
    {
      "label": "DELHI",
      "id": 9
    },
    {
      "label": "edit test",
      "id": 45
    },
    {
      "label": "GOA",
      "id": 1
    },
    {
      "label": "GUJARAT",
      "id": 2
    },
    {
      "label": "HARYANA",
      "id": 27
    },
    {
      "label": "HIMACHAL PRADESH",
      "id": 3
    },
    {
      "label": "JAMMU AND KASHMIR",
      "id": 4
    },
    {
      "label": "JHARKHAND",
      "id": 16
    },
    {
      "label": "KARNATAKA",
      "id": 10
    },
    {
      "label": "KERALA",
      "id": 11
    },
    {
      "label": "LADAKH",
      "id": 5
    },
    {
      "label": "LAKSHADWEEP",
      "id": 17
    },
    {
      "label": "MADHYA PRADESH",
      "id": 23
    },
    {
      "label": "MAHARASHTRA",
      "id": 32
    },
    {
      "label": "MANIPUR",
      "id": 33
    },
    {
      "label": "MEGHALAYA",
      "id": 12
    },
    {
      "label": "MIZORAM",
      "id": 18
    },
    {
      "label": "NAGALAND",
      "id": 19
    },
    {
      "label": "ODISHA",
      "id": 28
    },
    {
      "label": "Province",
      "id": 44
    },
    {
      "label": "PUDUCHERRY",
      "id": 31
    },
    {
      "label": "PUNJAB",
      "id": 29
    },
    {
      "label": "RAJASTHAN",
      "id": 6
    },
    {
      "label": "SIKKIM",
      "id": 24
    },
    {
      "label": "ssatriiaditya",
      "id": 42
    },
    {
      "label": "ssatriing99",
      "id": 41
    },
    {
      "label": "state11-test",
      "id": 38
    },
    {
      "label": "striing12",
      "id": 46
    },
    {
      "label": "stringg333",
      "id": 47
    },
    {
      "label": "TAMIL NADU",
      "id": 13
    },
    {
      "label": "TELANGANA",
      "id": 34
    },
    {
      "label": "Test 2",
      "id": 43
    },
    {
      "label": "Testing",
      "id": 49
    },
    {
      "label": "testing new save 123",
      "id": 39
    },
    {
      "label": "testingStates12312",
      "id": 40
    },
    {
      "label": "testr",
      "id": 48
    },
    {
      "label": "THE DADRA AND NAGAR HAVELI AND DAMAN AND DIU",
      "id": 37
    },
    {
      "label": "TRIPURA",
      "id": 35
    },
    {
      "label": "UTTARAKHAND",
      "id": 20
    },
    {
      "label": "UTTAR PRADESH",
      "id": 7
    },
    {
      "label": "WEST BENGAL",
      "id": 14
    }
  ],
  "statusCode": 200
}

http://10.48.158.197:8054/jobapi/recruitment/state

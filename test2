const updateWorkExperience = (fromDate, toDate) => {
    const fromDateObj = dayjs(fromDate);
    const toDateObj = dayjs(toDate);

    // Calculate the difference in years, months, and days
    const duration = toDateObj.diff(fromDateObj);
    const durationObject = dayjs.duration(duration);

    // Extract years, months, and days
    const years = durationObject.years();
    const months = durationObject.months();
    const days = durationObject.days();

    // Format the result
    const formattedWorkExperience = `${years} years, ${months} months, ${days} days`;

    formik.setFieldValue("workExperience", formattedWorkExperience);
    handlefieldchange(params.row.id, "workExperience", formattedWorkExperience);
};



const handlefieldchange = (rowId, fieldName, value) => {
    // Assuming you have a state variable named 'data' representing your form or table data
    const updatedData = data.map((row) => {
        if (row.id === rowId) {
            return {
                ...row,
                [fieldName]: value,
            };
        }
        return row;
    });

    // Update the state with the modified data
    setData(updatedData);

    // You might have additional logic here based on your application needs
};

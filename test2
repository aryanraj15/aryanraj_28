<Grid item xs={12} sm={4} md={3} lg={2.4}>
    <Autocomplete
        size="small"
        fullWidth
        id="employeeCode"  // Change the ID to a more appropriate one
        options={posts}  // Assuming `posts` is the array of employee codes from the API response
        value={formik.values.post}  // Assuming `post` is the field in your formik values
        onChange={(e, value) => {
            formik.setFieldValue("post", value ?? null);
        }}
        getOptionLabel={(value) => value}  // Assuming employee codes are strings
        renderInput={(params) => (
            <TextField
                {...params}
                label="Employee Code"
                name="post"
                InputProps={{
                    ...params.InputProps,
                    inputProps: {
                        ...params.inputProps,
                        maxLength: 50,
                    },
                }}
            />
        )}
    />
</Grid>








axios.get(`${process.env.REACT_APP_MASTER_API_URL}/employee-enrollment/emp-code-dropdown`, {
    headers: {
        Authorization: `Bearer ${Cookies.get("token")}`
    }
})
    .then(response => {
        // Check if the API response has the expected structure
        if (response.data && response.data.status === true && response.data.result) {
            // Assuming the result is an array of employee codes
            const employeeCodes = response.data.result;

            // Log the retrieved employee codes
            console.log("Employee Codes:", employeeCodes);

            // Set the employee codes in the state
            setPosts(employeeCodes);
        } else {
            // Log an error if the response structure is unexpected
            console.error("Unexpected API response structure:", response.data);
            setPosts([]);
        }
    })
    .catch(error => {
        // Log the error and setPosts to an empty array
        console.error("API Error:", error);
        setPosts([]);
    });


import React, { lazy, Suspense,useState } from "react";
import { Provider } from "react-redux";
import { Route, Routes } from "react-router-dom";
import { SnackbarProvider } from "./components/Snackbar";
import store from "./redux/store";
import PrivateRoutes from "./routes/PrivateRoutes";
import ScrollToTop from "./components/ScrollToTop";
import Header from "./layouts/Header";
import { ColorModeContextProvider } from "./utils/ColorModeContext";


/*****Pages******/
const Home = lazy(() => import("./pages/Home"));
const Login = lazy(() => import("./pages/Login/Login"));
const ForgotPassword = lazy(() => import("./pages/Login/forgotPassword"));
const Test2 = lazy(() => import("./pages/Test/test2"));
const Accordian = lazy(()=>import("./pages/Accordian/AccordianParent"));

const ChartAdmin = lazy(() => import("./pages/charts/ChartAdmin"));
const ChartPartners = lazy(() => import("./pages/charts/ChartPartners"));
const  MetricData = lazy(() => import("./pages/MasterAdmin/MetricData"));
const  MetricsMaster = lazy(() => import("./pages/MasterAdmin/MetricsMaster"));
const  PhasesMaster = lazy(() => import("./pages/MasterAdmin/PhasesMaster"));
const  ProjectMaster = lazy(() => import("./pages/MasterAdmin/ProjectMaster"));
const  QuestionsMaster = lazy(() => import("./pages/MasterAdmin/QuestionsMaster"));



const App = () => {
  
  return (
    <>
      <SnackbarProvider>
        <ColorModeContextProvider>
          {/* <AddBeneficiary /> */}
          <Provider store={store}>
            {/* <DDOBenefWorklist/> */}
            <AppRoutes />
          </Provider>
          {/* <BeneficiaryDetails /> */}
        </ColorModeContextProvider>
      </SnackbarProvider>
    </>
  );
};

const AppRoutes = () => {
  const [selectedProjectId,setSelectedProjectId]=useState('');
  return (
    <Suspense fallback={<div />}>
      {/* <Router> */}
      <ScrollToTop />
      {/* <NavigateToTop /> */}
      <Routes>
        <Route path="/" element={<Login />} exact />
        <Route path="/forgotpassword" element={<ForgotPassword />} />
        <Route element={<Header setSelectedProjectId={setSelectedProjectId}/>}>
          <Route element={<PrivateRoutes />}>
           <Route path="/home" element={<Home />} />
           <Route path="/test2" element={<Test2 />} />            
           <Route path="/chartadmin" element={<ChartAdmin selectedProjectId={selectedProjectId}/>}/>
           <Route path="/chartpartners" element={<ChartPartners/>}/>
           <Route path="/metricdata" element={<MetricData/>}/>
           <Route path="/metricsmaster" element={<MetricsMaster/>}/>
           <Route path="/phasesmaster" element={<PhasesMaster/>}/>
           <Route path="/projectmaster" element={<ProjectMaster/>}/>
           <Route path="/questionsmaster" element={<QuestionsMaster/>}/>
           <Route path="/accordian" element={<Accordian/>}/>
           {/* <Route path="/processcompliancechecklist" element={<Accordian/>}/> */}

            
         
         


          </Route>
        </Route>
      </Routes>
      {/* </Router> */}
    </Suspense>
  );

};

export default App;

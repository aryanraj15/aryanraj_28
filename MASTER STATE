import React, { useEffect } from "react";
import SearchTable from "../../src/Components/SearchTable";
import useTitle from "../Components/useTitle";
import { H3, H4 } from "../Components/Typography";
import { useTheme, Card, CardContent, Button, Stack } from "@mui/material";
import { useTheme, alpha, CardHeader, Divider } from "@mui/material";
import TextField from "@mui/material/TextField";
import Link from "@mui/material/Link";
import Box from "@mui/material/Box";
import Grid from "@mui/material/Grid";
import Typography from "@mui/material/Typography";
import Autocomplete from "@mui/material/Autocomplete";
import { useState } from "react";
import { Routes, Route, useNavigate } from "react-router-dom";
import { Small } from "../Components/Typography";
const stateslist = [
    { label: 'Andhra Pradesh', value: 'AP' },
    { label: 'Jharkhand', value: 'JH' },
];

function TelephonicIntimations() {
    const [states, setStates] = useState("");
    const [district, setDistrict]= useState("");
    const [rowss, setRowss] = useState([]);
    const [index, setIndex] = useState(1);
    const [selectedRow, setSelectedRow] = useState(null);
    
const handleChange = (e) => {
        setDistrict(e.target.value);
    };
    const theme = useTheme();
    const handleSubmit = (e) => {
        e.preventDefault();
        setSelectedRow(null);
        if (selectedRow !== null) {
            setRowss((prevValue) => {
                const updatedRows = [...prevValue];
                updatedRows[selectedRow].districttable = district;
                updatedRows[selectedRow].statestable = states;
       
                return updatedRows;
            });
        }
        else {
            setRowss((prevValue) => [
                ...prevValue,
                { index,statestable: states, districttable: district },
              
            ]);
            setIndex((prevValue) => prevValue + 1);
        }
        setDistrict("");
        setStates("");
    };
    const handleCancel = () => {
        setSelectedRow(null);
        setStates("");
        setDistrict("");   
    };

    const handleEdit = (index) => {
        setSelectedRow(index - 1);
        setDistrict(rowss[index - 1].districttable);
        setStates(rowss[index - 1].statestable);
    };

    const columns = [
        {
            field: "index",
            headerName: "S.No",
            width: 200,
            headerClassName: "super-app-theme--header",
        },
        {
            field: "statestable",
            headerName: "STATES",
            width: 300,
            headerClassName: "super-app-theme--header",
        },
        {
            field: "districttable",
            headerName: "District",
            width: 300,
            headerClassName: "super-app-theme--header",
        },
        {
            field: "action",
            headerName: "ACTION",
            headerClassName: "super-app-theme--header",
            width: 350,
            sortable: false,
            disableClickEventBubbling: true,
            renderCell: (params) => {
                return (
                    <Stack direction="row" spacing={2}>

                        <Button
                            variant="outlined"
                            color="inherit"
                            size="small"
                            onClick={() => handleEdit(params.row.index)}
                        >
                            EDIT
                        </Button>
                    </Stack>
                );
            },
        },
    ];

    return (
        <>
            <Card sx={{ mt: 2, backgroundColor: theme.palette.primary[100] }}>
                <CardContent >
                    <H3 lineHeight={2.2} sx={{ ml: 65 }} >SELECT DISTRICT</H3>
                    <Box component="form" onSubmit={handleSubmit}>
                    <Grid
                            container
                            direction="row"
                            columnSpacing={2}
                            justify="flex-end"
                            alignItems="center"
                        >
                             <Grid item xs={12} sm={4} md={4} lg={4}  >
                                <Autocomplete
                                    options={stateslist} 
                                    value={states}
                                    onChange={(e, newValue) => {
                                        setStates(newValue.label);
                                        console.log(newValue);
                                    }}
                                   
                                    renderInput={(params) => 
                                    <TextField  sx={{ ml: 50 }} 
                                    {...params} 
                                    label="STATES" />}
                                />

                            </Grid>
                            </Grid>
                        <Grid
                            container
                            direction="row"
                            rowSpacing={0}
                            columnSpacing={2}
                            justify="flex-end"
                            alignItems="center"
                        >
                            <Grid item xs={12} sm={4} md={4} lg={4}  >
                                <TextField
                                    margin="normal"
                                    fullWidth
                                    type="text"
                                    id="district"
                                    name="district"
                                    label="District Name"
                                    sx={{ ml: 50 }}
                                    value={district}
                                    onChange={handleChange}
                                />
                            </Grid>
                        </Grid>
                        <Box
                            spacing={2}
                            sx={{ flexGrow: 1, spacing: 2, mt: 1, pb: 3, float: "center", ml: 60 }}
                        >
                            <Button
                                sx={{
                                    minWidth: 100, ml: 1
                                }}
                                variant="contained"
                                type="submit"
                                size="large"
                            >
                                SAVE
                            </Button>
                            <Button
                                type="button"
                                sx={{ minWidth: 100, ml: 1 }}
                                onClick={handleCancel}
                                variant="outlined"
                                size="large"
                            >
                                CANCEL
                            </Button>
                        </Box>
                    </Box>
                </CardContent>
            </Card>
            <Card >
                <CardContent>
                    <SearchTable
                        columns={columns}
                        data={rowss}
                        isCheckbox={false}
                        isHideDensity={false}
                        isHideExport={true}
                        isHideFilter={true}
                        isHideColumn={true}
                        isHidePaging={false}
                        name="state"
                        id="state"
                    ></SearchTable>
                </CardContent>
            </Card>
        </>
    );
}

export default TelephonicIntimations;

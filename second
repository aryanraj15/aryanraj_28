import * as React from "react";
import { Formik, Form, Field } from "formik";
import * as Yup from "yup";
import Accordion from "@mui/material/Accordion";
import AccordionSummary from "@mui/material/AccordionSummary";
import AccordionDetails from "@mui/material/AccordionDetails";
import Typography from "@mui/material/Typography";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import Button from "@mui/material/Button";
import AddBoxIcon from "@mui/icons-material/AddBox";
import { useState } from "react";
import Autocomplete from '@mui/material/Autocomplete';
import VisibilityIcon from "@mui/icons-material/Visibility";
import LanguageIcon from '@mui/icons-material/Language';
import { createTheme } from "@mui/material";
import { ThemeProvider } from '@mui/material/styles';
import { makeStyles } from "@mui/styles";
import {
    Grid,
    TextField,
} from "@mui/material";

const Step1 = (props) => {
    if (props.currentStep !== 1) {
        return null;
    }

    // Define validation schema using Yup
    const validationSchema = Yup.object().shape({
        hospitalType: Yup.string().required("Hospital Type is required"),
        hospitalName: Yup.string().required("Hospital Name is required"),
        parentType: Yup.string().required("Hospital Parent Type is required"),
        hospitalPAN: Yup.string().required("Hospital PAN is required"),
        alternateMobileNo: Yup.string().required("Alternate Mobile No. is required"),
        contactNo: Yup.string().required("Hospital Contact No. is required"),
    });

    const initialValues = {
        hospitalType: "Government",
        hospitalName: "ASDF",
        parentType: "Single",
        hospitalPAN: "",
        alternateMobileNo: "7894352103",
        contactNo: "9435628105",
    };

    return (
        <div style={{ padding: "0px 60px", marginBottom: "5px" }}>
            <Formik
                initialValues={initialValues}
                validationSchema={validationSchema}
                onSubmit={(values) => {
                    // Handle form submission here
                    console.log(values);
                }}
            >
                {({ errors, touched }) => (
                    <Form>
                        <AccordionDetails>
                            <div style={{ color: "red", marginBottom: "15px", fontSize: "14px" }}>
                                <p><b>Note:</b> Please fill the Personal Details, all fields are mandatory</p>
                            </div>
                            <Grid
                                container
                                direction="row"
                                rowSpacing={0}
                                columnSpacing={2}
                                justify="flex-end"
                                alignItems="center"
                                sx={{ mb: 2 }}
                            >
                                <Grid item xs={12} sm={4} md={4} lg={4}>
                                    <Autocomplete
                                        disablePortal
                                        margin="normal"
                                        fullWidth
                                        size="small"
                                        id="hospitalType"
                                        name="hospitalType"
                                        options={options}
                                        sx={{ width: "100%" }}
                                        renderInput={(params) => (
                                            <TextField {...params} label="Hospital Type" />
                                        )}
                                    />
                                    {touched.hospitalType && errors.hospitalType ? (
                                        <div>{errors.hospitalType}</div>
                                    ) : null}
                                </Grid>
                                <Grid item xs={12} sm={4} md={4} lg={4}>
                                    <TextField
                                        margin="normal"
                                        fullWidth
                                        size="small"
                                        id="hospitalName"
                                        name="hospitalName"
                                        label="Hospital Name"
                                    />
                                    {touched.hospitalName && errors.hospitalName ? (
                                        <div>{errors.hospitalName}</div>
                                    ) : null}
                                </Grid>
                                <Grid item xs={12} sm={4} md={4} lg={4}>
                                    <Autocomplete
                                        disablePortal
                                        margin="normal"
                                        fullWidth
                                        size="small"
                                        id="parentType"
                                        name="parentType"
                                        options={options}
                                        sx={{ width: "100%" }}
                                        renderInput={(params) => (
                                            <TextField {...params} label="Hospital Parent Type" />
                                        )}
                                    />
                                    {touched.parentType && errors.parentType ? (
                                        <div>{errors.parentType}</div>
                                    ) : null}
                                </Grid>
                            </Grid>
                            <Grid
                                container
                                direction="row"
                                rowSpacing={0}
                                columnSpacing={2}
                                justify="flex-end"
                                alignItems="center"
                                sx={{ mb: 2 }}
                            >
                                <Grid item xs={12} sm={4} md={4} lg={4} sx={{ display: "flex" }}>
                                    <TextField
                                        margin="normal"
                                        fullWidth
                                        id="hospitalPAN"
                                        name="hospitalPAN"
                                        label="Hospital PAN"
                                    />
                                    {touched.hospitalPAN && errors.hospitalPAN ? (
                                        <div>{errors.hospitalPAN}</div>
                                    ) : null}
                                    <VisibilityIcon sx={{ ml: 1, mt: 1 }} />
                                </Grid>
                                <Grid item xs={12} sm={4} md={4} lg={4}>
                                    <TextField
                                        margin="normal"
                                        fullWidth
                                        id="alternateMobileNo"
                                        name="alternateMobileNo"
                                        label="Alternate Mobile No."
                                    />
                                    {touched.alternateMobileNo && errors.alternateMobileNo ? (
                                        <div>{errors.alternateMobileNo}</div>
                                    ) : null}
                                </Grid>
                                <Grid item xs={12} sm={4} md={4} lg={4}>
                                    <TextField
                                        margin="normal"
                                        fullWidth
                                        id="contactNo"
                                        name="contactNo"
                                        label="Hospital Contact No."
                                    />
                                    {touched.contactNo && errors.contactNo ? (
                                        <div>{errors.contactNo}</div>
                                    ) : null}
                                </Grid>
                            </Grid>
                        </AccordionDetails>
                    </Form>
                )}
            </Formik>
        </div>
    );
};

export default Step1;








// ... (previous code)

<Grid
    container
    direction="row"
    rowSpacing={0}
    columnSpacing={2}
    justify="flex-end"
    alignItems="center"
    sx={{ mb: 2 }}
>
    <Grid item xs={12} sm={4} md={4} lg={4}>
        <input
            type="file"
            id="aadharCard"
            name="aadharCard"
            accept=".pdf, .jpg, .jpeg, .png"
        />
        <label htmlFor="aadharCard">Upload Aadhar Card</label>
    </Grid>
    <Grid item xs={12} sm={4} md={4} lg={4}>
        <input
            type="file"
            id="panCard"
            name="panCard"
            accept=".pdf, .jpg, .jpeg, .png"
        />
        <label htmlFor="panCard">Upload PAN Card</label>
    </Grid>
</Grid>

// ... (continue with the rest of the code)

import * as React from "react";
import Button from "@mui/material/Button";
import Dialog from "@mui/material/Dialog";
import DialogActions from "@mui/material/DialogActions";
import DialogContent from "@mui/material/DialogContent";
import DialogContentText from "@mui/material/DialogContentText";
import DialogTitle from "@mui/material/DialogTitle";
import Slide from "@mui/material/Slide";
import axios from "axios";
import {
  Paper,
  Grid,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  TextField,
  Typography,
} from "@mui/material";
import { useState, useRef, useEffect } from "react";
import { Link } from "react-router-dom";
import CloseIcon from "@mui/icons-material/Close";
import useMediaQuery from "@mui/material/useMediaQuery";
import { useTheme } from "@mui/material/styles";
import { makeStyles } from "@mui/styles";
import Radio from "@mui/material/Radio";
import Autocomplete from "@mui/material/Autocomplete";
import { tableCellClasses } from "@mui/material/TableCell";
import tr from "date-fns/esm/locale/tr/index.js";
import Alert from "@mui/material/Alert";
import { styled } from "@mui/material/styles";
import Stack from "@mui/material/Stack";
import Box from "@mui/material/Box";
 
const StyledTableCell = styled(TableCell)(({ theme }) => ({
  [`&.${tableCellClasses.head}`]: {
    backgroundColor: "#2169b3",
    color: theme.palette.common.white,
  },
  [`&.${tableCellClasses.body}`]: {
    fontSize: 14,
  },
}));
const StyledTableRow = styled(TableRow)(({ theme }) => ({
  "&:nth-of-type(odd)": {
    backgroundColor: theme.palette.action.hover,
  },
  // hide last border
  "&:last-child td, &:last-child th": {
    border: 0,
  },
}));
const Transition = React.forwardRef(function Transition(props, ref) {
  return <Slide direction="up" ref={ref} {...props} />;
});
const steps = [
  {
    label: "You",
    status: ``,
    remarks: ``,
    update: ``,
  },
  {
    label: "DyEO - ADMIN",
    status: `DyEO approved the request.`,
    remarks: `approved`,
    update: `Pencil required quantity changed from 20 to 15`,
  },
  {
    label: "JEO - ADMIN",
    status: ``,
    remarks: ``,
    update: ``,
  },
  {
    label: "EO - ADMIN",
    status: ``,
    remarks: ``,
    update: ``,
  },
];
const TrackTransportRequestStatus = (props) => {
  const [requestTrackDetails, setRequestTrackDetails] = useState([]);
  console.log(props.data, "requestId is ");
  useEffect(() => {
    getStatusTrackDetails();
  }, []);
  const getStatusTrackDetails = () => {
    axios
      .post(`${process.env.REACT_APP_TRANSPORT_API_URL}/track-status`, {
        transportReqId: props.data,
      })
      .then((response) => {
        setRequestTrackDetails(response.data.result);
        console.log(response.data.result);
      });
  };
  const [activeStep, setActiveStep] = React.useState(1);
  const pageName = "Track Transport Request Status";
  const handleReset = () => {
    setActiveStep(0);
  };
  const { closeModal, data } = props;
  const [open, setOpen] = React.useState(true);
  const handleClickOpen = () => {
    setOpen(true);
  };
  const handleClose = () => {
    setOpen(closeModal);
    setOpen(closeModal);
  };
  const name = "Transport Booking Track";
  const theme = useTheme();
  const fullScreen = useMediaQuery(theme.breakpoints.down("md"));
  return (
    <>
      <Dialog
        open={closeModal}
        TransitionComponent={Transition}
        fullScreen={fullScreen}
        keepMounted
      >
        <DialogTitle>
          <b variant="h4" textAlign={"center"} textDecoration="underline">
            {name}
          </b>
          <CloseIcon
            sx={{
              float: "right",
              ":hover": { color: "white", backgroundColor: "#286cb4" },
            }}
            onClick={handleClose}
          />
        </DialogTitle>
        <DialogContent>
          {/* <Typography><b>Family Details</b></Typography> */}
          <Grid item display={"flex"} justifyContent={"center"} mt={1}>
            <TableContainer component={Paper}>
              <Table aria-label="customized table">
                <TableHead>
                  <TableRow>
                    <StyledTableCell sx={{ fontWeight: "bold" }}>
                      Sl No
                    </StyledTableCell>
                    <StyledTableCell sx={{ fontWeight: "bold" }}>
                      Action
                    </StyledTableCell>
                    <StyledTableCell sx={{ fontWeight: "bold" }}>
                      Action Date
                    </StyledTableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  {/* {requestTrackDetails.map((result, index) => {
                    {
                      console.log(index, result.actionDate, result.action);
                    } */}
                  {/* // <StyledTableRow>
                    //   <StyledTableCell>{index}</StyledTableCell>
                    //   <StyledTableCell>{result.action}</StyledTableCell>
                    //   <StyledTableCell>{result.actionDate}</StyledTableCell>
                    // </StyledTableRow>; */}
 
                  {/* // })} */}
                </TableBody>
              </Table>
            </TableContainer>
          </Grid>
 
          <table>
            <tr>
              <th>s.no</th>
              <th>action</th>
              <th>actionDate</th>
            </tr>
            {requestTrackDetails.map((result, index) => {
              <tr>
                <td>{index}</td>
                <td>{result.action}</td>
                <td>{result.actionDate}</td>
              </tr>;
            })}
          </table>
          {/* {showalert && (
            <DialogActions style={{ justifyContent: "flex-start" }}>
              <Alert variant="standard" severity="error">
                Please select a row in table
              </Alert>
            </DialogActions>
          )} */}
        </DialogContent>
 
        <DialogActions>
          <Stack direction="row" display="flex" justifyContent="flex-end">
            <Button
              variant="outlined"
              autoFocus
              onClick={handleClose}
              sx={{ mb: 3 }}
            >
              Cancel
            </Button>
          </Stack>
        </DialogActions>
        {/* <br/> */}
      </Dialog>
    </>
  );
};
export default TrackTransportRequestStatus;
 {
   "status": true,
   "message": "Details fetched successfully",
   "result": [
       {
           "actionDate": "21/03/2024 10:03 am",
           "action": "Dept.DyEO-NT initiated the transport request.\n"
       },
       {
           "actionDate": "18/03/2024 03:03 pm",
           "action": "DyEO-Admin approved the request.\n"
       }
   ],
   "statusCode": 200
}


{requestTrackDetails.map((result, index) => (
  <tr key={index}>
    <td>{index}</td>
    <td>{result.action}</td>
    <td>{result.actionDate}</td>
  </tr>
))}




import * as React from 'react';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import Typography from '@mui/material/Typography';
import LocationSearchingIcon from '@mui/icons-material/LocationSearching';
function createData(
  SNo,
  ActionBy,
  ActionOn

) {
  return { SNo, ActionBy, ActionOn};
}


const rows = [
  createData(1, 'Leave Applied', '14/03/2024'),
  createData(2, 'DYEO ADMIN', '15/03/2024'),
  createData(3, 'JEO ADMIN', '16/03/2024'),
  createData(4, 'ADMIN', ),
];

export default function BasicTable() {
    const pageName = "Track Leave";
//     // useTitle(pageName);
  return (<>
    <Typography variant='h4' ><LocationSearchingIcon sx={{ fontSize: "25px", color: '#246cb5' }} />&nbsp;{pageName}</Typography>
    <TableContainer component={Paper}>
      <Table sx={{ minWidth: 650 }} aria-label="simple table">
        <TableHead>
          <TableRow>
            <TableCell><h7><b>S.NO</b></h7></TableCell>
            <TableCell><h7><b>Action By</b></h7></TableCell>
            <TableCell ><h7><b>Action On</b></h7></TableCell>
            <TableCell ><h7><b>Remarks</b></h7></TableCell>

          </TableRow>
        </TableHead>
        <TableBody>
          {rows.map((row) => (
            <TableRow
              key={row.SNo}
              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
            >
              <TableCell component="th" scope="row">
                {row.SNo}
              </TableCell>
              <TableCell >{row.ActionBy}</TableCell>
              <TableCell >{row.ActionOn}</TableCell>

            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
    </>
  );
}

const handleFetchApplicants = async (values, reset) => {
    setLoading(true);
    try {
        console.log("Fetching applicants details for:", values);
        const payload = {
            loginName: values.loginName,
            userName: values.userName,
            empCode: values.empCode,
            enrollmentStatusId: values.enrollmentStatus,
        };
        console.log("Payload for fetching applicants:", payload);

        const response = await axios.post(
            `${process.env.REACT_APP_MASTER_API_URL}/employee-enrollment/user-details-admin`,
            payload,
            {
                headers: {
                    Authorization: `Bearer ${Cookies.get("token")}`,
                },
            }
        );

        setLoading(false);

        if (response.data.status && response.data.result.length > 0) {
            setRows(
                response.data.result.map((item, index) =>
                    createData(
                        index + 1,
                        item.loginName,
                        item.username,
                        item.enrollmentStatus,
                        item.dob,
                        item.empCode,
                        item.emailId
                    )
                )
            );

            if (reset) {
                showSnackbar("Reset successful", "info");
            } else {
                showSnackbar("Data fetched successfully", "success");
            }
        } else if (response.data.statusCode === 404) {
            // Handle the case when the status code is 404 (No data found)
            setRows([]);
            showSnackbar("No data found", "info");
        } else {
            // Handle other cases
            setRows([]);
            showSnackbar("An error occurred", "error");
        }
    } catch (error) {
        console.error("An error occurred:", error);
        setRows([]);
        setLoading(false);
        showSnackbar("Oops, something went wrong", "error");
    }
};

